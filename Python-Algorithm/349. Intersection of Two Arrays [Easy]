class Solution:
    # set approach
    # def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]:
    #     ans = []
    #     if len(nums1) > len(nums2):
    #         setBig = set(nums1)
    #         setSmall = set(nums2)
    #     else:
    #         setBig = set(nums2)
    #         setSmall = set(nums1)
    #     for x in setSmall:
    #         if x in setBig:
    #             ans.append(x)
    #     return ans
    
    # Dict approach
    def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]:
        freqDict = {}
        ans = set()
        if len(nums1) > len(nums2):
            bigArr = nums1
            smArr = nums2
        else:
            bigArr = nums2
            smArr = nums1
        for i in range(len(bigArr)):
            if bigArr[i] in freqDict:
                freqDict[bigArr[i]] += 1
            else:
                freqDict[bigArr[i]] = 1
        for i in range(len(smArr)):
            if smArr[i] in freqDict:
                ans.add(smArr[i])
        return ans
