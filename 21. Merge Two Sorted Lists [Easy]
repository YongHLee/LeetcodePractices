/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} list1
 * @param {ListNode} list2
 * @return {ListNode}
 */
var mergeTwoLists = function(list1, list2) {
    var mergedNode = new ListNode(0)
    var headOfMergedNode = mergedNode
    while (list1 !== null && list2 !== null) {
        if (list1.val <= list2.val) {
            mergedNode.next = list1
            list1 = list1.next
        } else {
            mergedNode.next = list2
            list2 = list2.next
        }
        mergedNode = mergedNode.next
    }
    if (list1 == null) {
        mergedNode.next = list2
    } else {
        mergedNode.next = list1
    }
    return headOfMergedNode.next
};

/*
Important thing to note in this problem is keep a reference to the merged node list so it can be retrieved for the answer. 
Also note that toward the end of the merging one list will run out of node so we need to merge rest of the non-empty node list to the merged node list.
 */
