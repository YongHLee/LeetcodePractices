/**
 * @param {string} s
 * @param {string} t
 * @return {boolean}
 */

// Hash apprach
// O(3n) = O(n) time complexity
// var isAnagram = function(s, t) {
//     if (s.length !== t.length) return false
//     sObj ={}
//     tObj ={}
//     for (let i = 0; i < s.length; i++) {
//         sObj[s[i]] ? sObj[s[i]] += 1 : sObj[s[i]] = 1  
//     }
//     for (let i = 0; i < t.length; i++) {
//         tObj[t[i]] ? tObj[t[i]] += 1 : tObj[t[i]] = 1 
//     }
    
//     for (const [key, value] of Object.entries(sObj)) {
//         if (value !== tObj[key]) return false
//     }
//     return true
// };

// Sort Apprach
// O(6nlogn) = O(nlogn)
var isAnagram = function(s, t) {
    if (s.length !== t.length) return false
    s = s.split('').sort().join('')
    t = t.split('').sort().join('')
    for (let i = 0; i < s.length; i++) {
        if (s[i] !== t[i]) return false
    }
    return true
};
